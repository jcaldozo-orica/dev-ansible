---

 - name: talk to all hosts just so we can learn about them
   hosts: dev
   tasks:
     - name: Classify hosts depending on their OS distribution
       group_by:
         key: os_{{ ansible_facts['distribution'] }}
     - name: download azcopy
       become: true
       ansible.builtin.get_url:
         url:  https://stshareddevaue01.blob.core.windows.net/soe/linux/azcopy?sp=r&st=2025-04-28T07:04:10Z&se=2028-04-28T15:04:10Z&spr=https&sv=2024-11-04&sr=b&sig=PR%2BGd88HkxGEAtp00SwYBmbueJqSHOLl1gFn1XGdTkU%3D
         dest: "/usr/bin/azcopy"
         mode: "0755"
     - name: download soe files via azcopy
       become: true
       ansible.builtin.shell: /usr/bin/azcopy copy --recursive --overwrite false "https://stshareddevaue01.blob.core.windows.net/soe?sp=rl&st=2025-04-28T07:21:21Z&se=2028-04-28T15:21:21Z&spr=https&sv=2024-11-04&sr=c&sig=zlxFO9GYhViuoENKd7jnxD6QEFMtojutmJ0S26ayjrk%3D" "{{ linuxSoePath }}"
 - hosts: os_Ubuntu
   gather_facts: False
   tasks:


    #copy zscaler, root ca, sub1 ca, sub2 ca and update CA store
      - name: Copy CA certificates to target hosts
        become: true
        ansible.builtin.copy:
          src:  "{{ linuxSoePath }}/soe/cert/" 
          dest: /usr/local/share/ca-certificates/
          remote_src: yes
      - name: Update CA trust store
        shell: "update-ca-certificates"
        become: true
    #configure ori.orica.net dns suffix
      - name: Install a list of packages
        become: true
        ansible.builtin.apt:
          pkg:
          - resolvconf
          state: present
      - name: add ori.orica.net suffix to resolv.conf
        become: true
        ansible.builtin.lineinfile:
          path: /etc/resolvconf/resolv.conf.d/tail
          line:  search ori.orica.net
          create: yes
      - name: update /etc/resolv.conf
        shell: "resolvconf -u"
        become: true

    #install and configure nxlog / point to 10.172.32.101
      - name: Install a list of packages
        become: true
        ansible.builtin.apt:
          pkg:
          - libapr1
          - libdbi1
          state: present
      - name: install nxlog deb package
        become: true
        ansible.builtin.apt: "{{ linuxSoePath }}/soe/linux/deb/nxlog-ce_*ubuntu22*.deb"
      #config goes here

    #install servicenow agent
      - name: install snowagent deb package
        become: true
        ansible.builtin.apt: "{{ linuxSoePath }}/soe/linux/deb/Orica-Linux-snowagent-7.0.0-x64.deb"
      - name: update snow configuration
        shell: "/opt/snow/snowcron -f /opt/snow/snowcron.conf /opt/snow/snowagent"
        become: true

    #install crowdstrike
      - name: install falcon deb package
        become: true
        ansible.builtin.apt: "{{ linuxSoePath }}/soe/linux/deb/falcon-sensor_7.06.0-16108_amd64.deb"
      - name: configure CID
        become: true
        shell: "/opt/CrowdStrike/falconctl -s -f --cid='{{ oricacscid }}'"
        when: ansible_facts.services['falcon-sensor.service'].state != 'running'
      - name: enable and start falcon-sensor
        ansible.builtin.systemd_service:
          state: started
          enabled: true
          name: falcon-sensor
        when: ansible_facts.services['falcon-sensor.service'].state != 'running'
    #install qualys

    #install servicenow acc

    #install illumio

    #configure to allow Icinga

    #drop banner.txt, configure banner, PermitRootLogin no on /etc/ssh/sshd_config
      - name: Copy banner from soe directory
        become: true
        ansible.builtin.copy:
          src:  "{{ linuxSoePath }}/soe/linux/banner.txt" 
          dest: /etc/ssh/banner.txt
          remote_src: yes
      - name: Configure sshd_config with banner and PermitRootLogin
        ansible.builtin.lineinfile:
          path: /etc/ssh/sshd_config
          state: present
          regexp: '^#Banner none'
          line: 'Banner /etc/ssh/banner.txt'
      
    #configure AD login

    #configure tmux

    #configure zsh


